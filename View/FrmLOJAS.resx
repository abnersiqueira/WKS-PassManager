<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFoAAABaCAYAAAA4qEECAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAARfSURBVHhe7Z1JiyVFFEYLnHHatq2gov4Bh1UrNqJu1YUKTjhvFNoBW5fuHFYi+DccF4r+AEUU
        7XbjRt2oTTu7UkFtvwMFNsUX0E9v3IjMugcOFK9uvYjMepUZcfNG1FZRFEVRFEVRFEVx4pwkr5IPyBfl
        6/Kw/EL+JP/Ylq95je8R84LkZ66UvEdhuEA+Jt+Sv8pj/9Nf5JvygDxf7mrOkHfL9+Rf0p2wCP+U78q7
        5Oly13CW5JP2jXQnpqffyWfluXK1nCKfkj9KdxIypQ9PSvq0Kq6Rn0l30CP9XF4vFw/XxFfk39Id6AzS
        t5flaXKRXCQ/kO7gZvRjealcFPw5RgzTsmVYeJ1cBLfI36Q7kCXIZOh2OTUPy55j4iw5hofklNwsmRy4
        ji9RTvZtciq4rv0uXYeXLJeRG+UUXCaXeOM7UblBXiKHwtiTYZHr4Jr8SA4dZzMZcR1bo0xqhsC0euYZ
        X7Qc67UylZPlIek6tGbJ16QmosjCuY70lBEA7Z637cHt11xsTx+XKZwtR6Q6ObE7eVq62J5+L8mpd2fE
        wSGf4p3skS62t+Syu0La81vpGu9tCxfb2yOSR3HduEe6hjNs4WIzvEN2gweprtEMW7jYDN+WXeCx/cik
        UQsXmyFJpy6lDNRduAazbOFis3xUhkNxi2ssyxYuNstXZSiUWP0sXWNZtnCxWXJOQsvPqIVzDWXawsVm
        eoUM40HpGsm0hYvN9D4ZBlWdrpFMW7jYTJ+TYbwhXSOZtnCxmYbeEGdIibZwsZl+IsP4SrpGNvX4VOco
        olOsX8owfpCukU11qc5RRGUhSZuGEfXbH/lJ3klUipUyizCiTvReOQvkKVwfNzX0REddOvhznYVnpOvj
        poZeOiJvhpzskZ9s2qYPU94Ma3jXNnR4VxOWtqETlpqCtw2dgrMi1TWSaQsXm+m9MoxKk7a9XIZRiX9v
        eOIfWFvtGsuyhYvNMvxRFrCs2DWWZQsXm+UjMhwG+lVu8K+cC/IlXWCXANdohi1cbIbdCmiAbR9coxm2
        cLEZdi0Jo8hxxPYP2MLF9rZ7kSOMKEJHl4iKSnVu6hOyO6MK0V2KNSrVuYmkRc+UKVCI7TrR0+NTrNGp
        zk1kmJsGi4U+la4jazZ9sRBcLWv5WxIscnSdWqMvyWGwbJflu65ja/JDeaocCgvSWZjuOrgGydBdLKdg
        v1zyrjMtGdXcIKfiJrm2jVFulVPC9jhr2OqHDww14VPDlj9LvoxQeTTdFj8t2PpniTdIbnzcbxbFhfJ9
        6Q5oRhmmDt/S57/COJtJzcwzSPrGZGT4ODkCpuszbqRCn/bJVUEiik1FSDO6g86UPpCFo0+rhVwuB/m1
        dCehp0clG3WfI3cNPBa7U74je050eG8epPKMb1dtPe9gyQUL2F+T/DcKd8I2kffgvai76FYSsHQosaKe
        7X75vKQaiBpk/hUIj9DIPyBf8xrfI4ZYVrHys+FlWkVRFEVRFEVRFCtla+sfiV5ZbZ2/C2cAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>