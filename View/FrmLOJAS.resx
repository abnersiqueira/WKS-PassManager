<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ttm0NSOZOCEAAAAASUVORK5CYII=
</value>
  </data>
</root>